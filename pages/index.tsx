import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import dynamic from 'next/dynamic';
import { useMount } from 'ahooks';
import { DocumentData } from 'firebase/firestore';
import { ComponentType, useState } from 'react';
import ReactModal from 'react-modal';
// import { TSStage } from 'tart-scratch/webpacked/bundle';

import { fbApp } from '../libs/firebase';
import styles from '../styles/Home.module.css';

enum EModal {
  None,
  Preview,
}

interface ICommentData {
  id: string;
  data: DocumentData;
}

const DynamicComponentWithNoSSR = dynamic(
  () => import('tart-scratch/webpacked/bundle').then((mod) => mod.TSStage),
  { ssr: false }
);

const Home: NextPage = () => {
  const [comments, setComments] = useState<ICommentData[]>([]);
  const [modal, setModal] = useState(EModal.None);
  const [selectedProject, setSelectedProject] = useState<ICommentData>();

  const handleOpenPreviewModal = (project: ICommentData) => {
    setSelectedProject(project);
    setModal(EModal.Preview);
  };

  useMount(async () => {
    const data = await fbApp.getProjects();
    setComments(data);
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <div className={styles.grid}>
          {comments.map((c) => (
            <div className={styles.card} key={c.id}>
              <figure>
                <div className={styles.thumbnail}>
                  <Image
                    src={c.data.thumbnail}
                    layout="fill"
                    alt="scratch project thumb"
                  />
                </div>
                <figcaption>
                  <p>{c.id}</p>
                </figcaption>
              </figure>
              <button onClick={() => handleOpenPreviewModal(c)}>Preview</button>
            </div>
          ))}
        </div>

        <ReactModal
          isOpen={modal === EModal.Preview}
          onRequestClose={() => setModal(EModal.None)}
          ariaHideApp={false}
          style={{
            content: {
              top: '50%',
              left: '50%',
              right: 'unset',
              bottom: 'unset',
              transform: 'translate(-50%, -50%)',
            },
          }}
        >
          <DynamicComponentWithNoSSR project={selectedProject} />
          {/* <TSStage project={selectedProject} /> */}
        </ReactModal>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
